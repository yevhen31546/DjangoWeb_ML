"""
Django settings for Ask_Oskar project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import random
import logging

# from django.core.handlers.wsgi import WSGIHandler
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
APPEND_SLASH = False

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%%k$p($z301u&m2^mcqfx*^o0cvclfprvg0!4*ko@l5#$^y_(1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['www.askoskar.com', '0.0.0.0', 'localhost', '127.0.0.1', 'askoskara.snippetbucket.com']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'pinax.referrals',
    'social_widgets',
    'django_crontab',
    'django_summernote',
    'analytics',
    'taskoftheday',
    'progress',
    'goals',
    'registration',
    'settings',
    'sb_mail',
    'sb_shortlink',

]
SITE_ID = 1

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'pinax.referrals.middleware.SessionJumpingMiddleware',
]

ROOT_URLCONF = 'Ask_Oskar.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Ask_Oskar.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
# REGISTRATION_URL = 1#'%s://%s/i/'%(request.scheme,request.META['HTTP_HOST'])
# REGISTRATION_URL1 = 1#'%s://%s/'%(request.scheme,request.META['HTTP_HOST'])
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'assets'),
    os.path.join(BASE_DIR, 'static'),
)

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'your-username@gmail.com'
EMAIL_HOST_PASSWORD = 'your-password'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

from django.conf import settings
from django.conf.urls.static import static

if settings.DEBUG:
    urlpatterns = static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

# FOR CRONJOB FILE LOG HANDLER

logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s %(name)s.%(funcName)s +%(lineno)s: %(levelname)-8s [%(process)d] %(message)s',
                    )
# logger = logging.getLogger(__ name__)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': "%(asctime)s %(levelname)s %(message)s",
            'datefmt': "%a, %d %b %Y %H:%M:%S"
        },
    },
    'handlers': {
        'file': {
            'class': 'logging.FileHandler',
            # 'logging':'logging.basicConfig()',
            # 'logger':'logging.getLogger (__ name__)',
            'filename': os.path.join(BASE_DIR, 'LOGS/logger.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django_cron': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

CRONJOBS = [
    # Format1: ('*min *hr *day of mnth *month *Day of week', 'python module path of method','optional-job specific suffix')
    # Format2: () 
    ('*/1 * * * *', 'Ask_Oskar.cron.mail_sending'),
    ('*/1 * * * *', 'Ask_Oskar.cron.analytics_job'),
]

logging.getLogger('googleapiclient.discovery_cache').setLevel(logging.ERROR)


def generate_code(referral_class):
    def _generate_code():
        t = "abcdefghijkmnopqrstuvwwxyzABCDEFGHIJKLOMNOPQRSTUVWXYZ1234567890"
        return "".join([random.choice(t) for i in range(40)])

    code = _generate_code()
    while referral_class.objects.filter(code=code).exists():
        code = _generate_code()
    return code


# pinax-referal settings
PINAX_REFERRALS_IP_ADDRESS_META_FIELD = 'HTTP_X_FORWARDED_FOR'
PINAX_REFERRALS_SECURE_URLS = False

PINAX_REFERRALS_ACTION_DISPLAY = {

    'RESPONDED': 'Clicked on referral link'

}

PINAX_REFERRALS_REDIRECT_ATTRIBUTE = 'redirect_to'
PINAX_REFERRALS_CODE_GENERATOR_CALLBACK = 'Ask_Oskar.settings.generate_code'
